function create(app)
% create - Creates all parts of the main app display
% -------------------------------------------------------------------------
% Abstract: This function creates all parts of the main app display
%
% Syntax:
%           create(app)
%
% Inputs:
%           app - The PKPDViewer.AnalysisApp viewer object
%
% Outputs:
%           none
%
% Examples:
%           none
%
% Notes: none
%

% Copyright 2017 The MathWorks, Inc.
%
% Auth/Revision:
%   MathWorks Consulting
%   $Author: agajjala $
%   $Revision: 420 $  $Date: 2017-12-07 14:47:44 -0500 (Thu, 07 Dec 2017) $
% ---------------------------------------------------------------------


%% Create the figure

% Create the figure window
app.Figure = figure(...
    'Name', app.Name, ...
    'MenuBar', 'none', ...
    'Toolbar', 'none', ...
    'DockControls','off', ...
    'NumberTitle', 'off', ...
    'IntegerHandle','off',...
    'HandleVisibility', 'callback', ...
    'Color', get(0,'DefaultUIControlBackgroundColor'), ...
    'Visible', 'off',...
    'Position',[100 200 1020 750],...
    'DeleteFcn',@(h,e)delete(app),...
    'WindowButtonDownFcn',@(h,e)onWindowButtonDown(app,h,e),...
    'CloseRequestFcn',@(h,e)onClose(app));

% Save this appect handle in the figure appdata (otherwise it
% might get cleaned up and deleted unintentionally)
setappdata(app.Figure,'AnalysisApp',app)



%% Create the menus

app.h.File_MENU = uimenu(...
    'Parent',app.Figure,...
    'Label','File');

% File Menu

app.h.FileOpen_MENU = uimenu(...
    'Parent',app.h.File_MENU,...
    'Label','Open Session...',...
    'Accelerator','O',...
    'Callback',@(h,e)onOpen(app));

app.h.FileOpenRecent_MENU = uimenu(...
    'Parent',app.h.File_MENU,...
    'Label','Open Recent Session');

app.h.FileImportData_MENU = uimenu(...
    'Parent',app.h.File_MENU,...
    'Label','Import Dataset...',...
    'Separator','on',...
    'Accelerator','I',...
    'Callback',@(h,e)onImportData(app));

app.h.FileSave_MENU = uimenu(...
    'Parent',app.h.File_MENU,...
    'Separator','on',...
    'Label','Save Session',...
    'Accelerator','S',...
    'Callback',@(h,e)onSave(app));

app.h.FileSaveAs_MENU = uimenu(...
    'Parent',app.h.File_MENU,...
    'Label','Save Session As...',...
    'Callback',@(h,e)onSaveAs(app));

app.h.FileExport_MENU = uimenu(...
    'Parent',app.h.File_MENU,...
    'Label','Export',...
    'Separator','on');
app.h.FileExportSimulation_MENU = uimenu(...
    'Parent',app.h.FileExport_MENU,...
    'Label','Selected Simulation Results To Excel...',...
    'Tag','ExportSimToExcel',...
    'Callback',@(h,e)onExport(app,h,e));
app.h.FileExportFitting_MENU = uimenu(...
    'Parent',app.h.FileExport_MENU,...
    'Separator','on',...
    'Label','Data Fitting Results To Excel...',...
    'Tag','ExportFittingToExcel',...
    'Callback',@(h,e)onExport(app,h,e));
app.h.FileExportFittingSummary_MENU = uimenu(...
    'Parent',app.h.FileExport_MENU,...
    'Label','Fitting Summary To PDF...',...
    'Tag','ExportFittingToPDF',...
    'Callback',@(h,e)onExport(app,h,e));
app.h.FileExportPopulatinon_MENU = uimenu(...
    'Parent',app.h.FileExport_MENU,...
    'Separator','on',...
    'Label','Selected Population Simulation Results To Excel...',...
    'Tag','ExportPopToExcel',...
    'Callback',@(h,e)onExport(app,h,e));
app.h.FileExportNCA_MENU = uimenu(...
    'Parent',app.h.FileExport_MENU,...
    'Separator','on',...
    'Label','Non-Compartmental Analysis (NCA) to Excel...',...
    'Tag','ExportNCAToExcel',...
    'Callback',@(h,e)onExport(app,h,e));

app.h.FileExit_MENU = uimenu(...
    'Parent',app.h.File_MENU,...
    'Label','Exit',...
    'Separator','on',...
    'Accelerator','Q',...
    'Callback',@(h,e)onClose(app));


% Edit Menu

app.h.Edit_MENU = uimenu(...
    'Parent',app.Figure,...
    'Label','Edit');

app.h.EditPlotSettings_MENU = uimenu(...
    'Parent',app.h.Edit_MENU,...
    'Label','Extended Plot Settings...',...
    'Accelerator','E',...
    'Callback',@(h,e)onEditPlotSettings(app));

% Task Menu

app.h.Task_MENU = uimenu(...
    'Parent',app.Figure,...
    'Label','Functionality');

app.h.TaskRun_MENU = uimenu(...
    'Parent',app.h.Task_MENU,...
    'Label','Run',...
    'Accelerator','R',...
    'Callback',@(h,e)onRunAnalysis(app));


% Help Menu Options

app.h.Help_MENU = uimenu(...
    'Parent',app.Figure,...
    'Label','Help');

app.h.HelpUserGuide_MENU = uimenu(...
    'Parent',app.h.Help_MENU,...
    'Label','User Guide...',...
    'Enable','off',... % Temporarily disable
    'Callback',@(h,e)onUserGuide(app));

Label = sprintf('About %s...',app.Name);
app.h.HelpAbout_MENU = uimenu(...
    'Parent',app.h.Help_MENU,...
    'Label',Label,...
    'Callback',@(h,e)onAbout(app));


%% Create the toolbar

app.h.Toolbar = uitoolbar(...    % Toolbar buttons
    'Parent',app.Figure, ...
    'HandleVisibility','callback');

Icon = iconRead('Run_16.png');
app.h.RunToggleTool = uipushtool(...   % Run toolbar button
    'Parent',app.h.Toolbar,...
    'TooltipString','Run',...
    'Tag','PushToolRun',...
    'CData',Icon,...
    'HandleVisibility','callback', ...
    'ClickedCallback',@(h,e)onRunAnalysis(app));

Icon = iconRead(fullfile(matlabroot, '/toolbox/matlab/icons/zoom.mat'));
app.h.ZoomInToggleTool = uitoggletool(...   % ZoomIn toolbar button
    'Parent',app.h.Toolbar,...
    'TooltipString','Zoom In',...
    'Tag','ToggleToolZoomIn',...
    'CData',Icon,...
    'HandleVisibility','callback', ...
    'ClickedCallback',@(h,e)onToggleTool(app,h,e));

Icon = iconRead(fullfile(matlabroot, '/toolbox/matlab/icons/zoomminus.mat'));
app.h.ZoomOutToggleTool = uitoggletool(...   % ZoomOut toolbar button
    'Parent',app.h.Toolbar,...
    'TooltipString','Zoom Out',...
    'Tag','ToggleToolZoomOut',...
    'CData',Icon,...
    'HandleVisibility','callback', ...
    'ClickedCallback',@(h,e)onToggleTool(app,h,e));

Icon = iconRead(fullfile(matlabroot, '/toolbox/matlab/icons/pan.mat'));
app.h.PanToggleTool = uitoggletool(...   % Pan toolbar button
    'Parent',app.h.Toolbar,...
    'TooltipString','Pan',...
    'Tag','ToggleToolPan',...
    'CData',Icon,...
    'HandleVisibility','callback', ...
    'ClickedCallback',@(h,e)onToggleTool(app,h,e));

Icon = iconRead(fullfile(matlabroot, '/toolbox/matlab/icons/datatip.mat'));
app.h.ExploreToggleTool = uitoggletool(...   % Datacursormode toolbar button
    'Parent',app.h.Toolbar,...
    'TooltipString','Explore',...
    'Tag','ToggleToolExplore',...
    'CData',Icon,...
    'HandleVisibility','callback', ...
    'ClickedCallback',@(h,e)onToggleTool(app,h,e));


%% Create the layout

% The horizontal layout, making left/middle/right panes
app.h.HLayout = uix.HBoxFlex(...
    'Parent',app.Figure,...
    'BackgroundColor',[0.8 0.8 0.8],...
    'Spacing',8);

% The Left Panel
app.h.LeftMainPanel = uix.Panel(...
    'Parent',app.h.HLayout,...
    'BorderType','none');

% The Middle panel that will contain any middle pane contents
app.h.MiddleLayout = uix.VBoxFlex(...
    'Parent',app.h.HLayout,...
    'BackgroundColor',[0.8 0.8 0.8],...
    'Spacing',8);

% The Right panel that will contain any right pane contents
app.h.RightLayout = uix.VBoxFlex(...
    'Parent',app.h.HLayout,...
    'BackgroundColor',[0.8 0.8 0.8],...
    'Spacing',8);

% Adjust sizes
app.h.HLayout.Widths = [-1 -2 -1];
% app.h.HLayout.MinimumWidths = [500 100 200];


%% Create the Left Panel

tempPanel = uipanel(...
    'Parent',app.h.LeftMainPanel,...
    'BorderWidth',0,...
    'BorderType','none');

Width = 510;
DefaultHeight = 50000;

% Add slider
app.h.LeftSlider = uicontrol(...
    'Parent',tempPanel,...
    'Style','slider',...
    'Units','pixels',...
    'Value',1,...
    'Position',[1 0 20 DefaultHeight]);

app.h.LeftPanel = uipanel(...
    'Parent',tempPanel,...
    ...'BorderType','none',...
    'BorderWidth',0,...
    'Units','pixels',...
    'Position',[22 0 Width DefaultHeight]);

set(tempPanel,'ResizeFcn',@(h,e)onResize(app,h,e));
set(app.h.LeftSlider,'Callback',@(h,e)onScroll(app,h,e));
set(app.Figure,'WindowScrollWheelFcn',@(h,e)mouseWheelCallback(app,h,e));


%% Populate the Left Panel

app.h.VLeftLayout = uix.VBox(...
    'Parent',app.h.LeftPanel,...
    'Padding',5,...
    'Spacing',5);

% Top left
app.h.TopLeftBoxPanel = uix.BoxPanel(...
    'Parent',app.h.VLeftLayout,...
    'Title','General Settings',...
    'BorderType','none',...
    'MinimizeFcn',@(h,e)onMinimizeGeneralSettings(app,h,e),...
    'Padding',10,...
    'FontSize',10);
app.h.VTopLeftLayout = uix.VBox(...
    'Parent',app.h.TopLeftBoxPanel,...
    'Padding',10,...
    'Spacing',5);

% Bottom left
% Card panel
app.h.CardLayout = uix.CardPanel(...
    'Parent',app.h.VLeftLayout);


%% Project

app.h.ProjectHLayout = uix.HBox(...
    'Parent',app.h.VTopLeftLayout,...
    'Spacing',8);
app.h.ProjectNameLabel = uicontrol(...
    'Parent',app.h.ProjectHLayout,...
    'Style','text',...
    'String','Project:',...
    'FontWeight','bold',...
    'HorizontalAlignment','left',...
    'FontSize',10);
app.h.ProjectNameEdit = uicontrol(...
    'Parent',app.h.ProjectHLayout,...
    'Style','text',...
    'String','<Empty>',...
    'FontAngle','italic',...
    'HorizontalAlignment','left',...
    'TooltipString','The name of the project',...
    'Tag','ProjectName',...
    'FontSize',10);
app.h.ProjectHLayout.Widths = [85 -1];


%% Model

app.h.ModelHLayout = uix.HBox(...
    'Parent',app.h.VTopLeftLayout,...
    'Spacing',8);
app.h.ModelNameLabel = uicontrol(...
    'Parent',app.h.ModelHLayout,...
    'Style','text',...
    'String','Model:',...
    'FontWeight','bold',...
    'HorizontalAlignment','left',...
    'FontSize',10);
app.h.ModelNameEdit = uicontrol(...
    'Parent',app.h.ModelHLayout,...
    'Style','text',...
    'String','<Empty>',...
    'FontAngle','italic',...
    'HorizontalAlignment','left',...
    'TooltipString','The name of the model',...
    'Tag','ModelName',...
    'FontSize',10);
app.h.ModelHLayout.Widths = [85 -1];


%% Dataset

app.h.DatasetLayout = uix.HBox(...
    'Parent',app.h.VTopLeftLayout,...
    'Spacing',8);
app.h.DatasetLabel = uicontrol(...
    'Parent',app.h.DatasetLayout,...
    'Style','text',...
    'String','Dataset:',...
    'FontWeight','bold',...
    'HorizontalAlignment','left',...
    'TooltipString','Dataset for Fitting',...
    'FontSize',10);
app.h.DatasetText = uicontrol(...
    'Parent',app.h.DatasetLayout,...
    'Style','text',...
    'String','<Empty>',...
    'FontAngle','italic',...
    'HorizontalAlignment','left',...
    'TooltipString','Dataset for Fitting',...
    'Tag','DatasetFileName',...
    'FontSize',10);
app.h.DatasetLayout.Widths = [85 -1];


%% Analysis button group

app.h.AnalysisPanel = uipanel(...
    'Parent',app.h.VTopLeftLayout,...
    'BorderType','none',...
    'FontWeight','bold',...
    'FontSize',10);
app.h.TaskLabel = uicontrol(...
    'Parent',app.h.AnalysisPanel,...
    'Style','text',...
    'String','Functionality:',...
    'FontWeight','bold',...
    'HorizontalAlignment','left',...
    'TooltipString','Task',...
    'FontSize',10,...
    'Units','pixels',...
    'Position',[1 45 200 20]);
app.h.AnalysisRadioButtonGroup = uibuttongroup(...
    'Parent',app.h.AnalysisPanel,...
    'FontSize',10,...
    'BorderType','none',...
    'FontWeight','bold',...
    'Units','pixels',...
    'Position',[90 0 300 80],...
    'SelectionChangeFcn',@(h,e)onEditAnalysis(app,h,e));
app.h.SimulationRadioButton = uicontrol(...
    'Parent',app.h.AnalysisRadioButtonGroup,...
    'Style','radiobutton',...
    'String','Simulation',...
    'TooltipString','Analysis: Simulation',...
    'Tag','Simulation',...
    'FontSize',10,...
    'Units','pixels',...
    'Position',[5 45 300 20]); % [0.06 0 0.27 1]);
app.h.FittingRadioButton = uicontrol(...
    'Parent',app.h.AnalysisRadioButtonGroup,...
    'Style','radiobutton',...
    'String','Data Fitting',...
    'TooltipString','Analysis: Data Fitting (Parameter Estimation)',...
    'Tag','Fitting',...
    'FontSize',10,...
    'Units','pixels',....
    'Position',[5 25 300 20]);%[0.39 0 0.27 1]);
app.h.PopulationRadioButton = uicontrol(...
    'Parent',app.h.AnalysisRadioButtonGroup,...
    'Style','radiobutton',...
    'String','Population Simulation',...
    'TooltipString','Analysis: Population Simulation',...
    'Tag','Population',...
    'FontSize',10,...
    'Units','pixels',...
    'Position',[5 5 300 20]);%[0.72 0 0.27 1]);


%% Variant

app.h.VariantLayout = uix.HBox(...
    'Parent',app.h.VTopLeftLayout);
app.h.VariantNameLabel = uicontrol(...
    'Parent',app.h.VariantLayout,...
    'Style','text',...
    'String','Variant:',...
    'FontWeight','bold',...
    'TooltipString','Active and Ordered Variants',...
    'HorizontalAlignment','left',...
    'FontSize',10);
if app.IsPC
    app.h.VariantTable = uiextras.jTable.Table(...
        'Parent',app.h.VariantLayout,...
        'ColumnName',{'Active','Order','Name','Tag'},...
        'ColumnFormat',{'boolean','popup','char','char'},...
        'ColumnEditable',[true true false false],...
        'ColumnMinWidth',[50 50 50 50],...
        'ColumnPreferredWidth',[50 50 200 50],...
        'ColumnWidth',[50 50 200 50],...
        'Data',{},...
        'Tag','VariantTable',...
        'CellEditCallback',@(h,e)onVariantTableEdited(app,h,e));
    % Automatically size to fit contents
    app.h.VariantTable.ColumnResizePolicy = 'off';
    app.h.VariantTable.sizeColumnsToData();
else
    app.h.VariantTable = uitable(...
        'Parent',app.h.VariantLayout,...
        'RowName',{},...
        'ColumnName',{'Active','Order','Name','Tag'},...
        ...'ColumnFormat',{'boolean','popup','char','char'},...
        'ColumnEditable',[true true false false],...
        ...'ColumnMinWidth',[50 50 50 50],...
        ...'ColumnPreferredWidth',[50 50 200 50],...
        ...'ColumnWidth',[50 50 200 50],...
        'Data',{},...
        'Tag','VariantTable',...
        'CellSelectionCallback',@(h,e)onVariantTableSelection(app,h,e),...
        'CellEditCallback',@(h,e)onVariantTableEdited(app,h,e));
end

hFigure = ancestor(app.h.VariantLayout,'Figure');
% Create context menu
app.h.VariantTableContextMenu = uicontextmenu('Parent',hFigure);    
uimenu(app.h.VariantTableContextMenu,...
    'Label','Delete',...
    'Tag','VariantDelete',...
    'Callback',@(h,e)onVariantTableContextMenu(app,h,e));    
set(app.h.VariantTable,'UIContextMenu',app.h.VariantTableContextMenu);

app.h.VariantLayout.Widths = [60 -1];


%% Dosing

app.h.DosingLayout = uix.VBox(...
    'Parent',app.h.VTopLeftLayout,...
    'Spacing',10);
% Top selection layout
app.h.DosingSelectionLayout = uix.HBox(...
    'Parent',app.h.DosingLayout);
app.h.DosingNameLabel = uicontrol(...
    'Parent',app.h.DosingSelectionLayout,...
    'Style','text',...
    'String','Dosing:',...
    'FontWeight','bold',...
    'TooltipString','Active Doses',...
    'HorizontalAlignment','left',...
    'FontSize',10);
if app.IsPC
    app.h.DosingTable = uiextras.jTable.Table(...
        'Parent',app.h.DosingSelectionLayout,...
        'ColumnName',{'Active','Name','Type','TargetName','StartTime','TimeUnits','Amount','AmountUnits','Interval','Rate','RepeatCount'},...
        'ColumnFormat',{'boolean','char','char','char','float','char','float','char','integer','float','integer'},...
        'ColumnEditable',[true false false false true false true false true true true],...
        'ColumnMinWidth',[50 50 50 50 50 50 50 50 50 50 50],...
        'ColumnPreferredWidth',[50 300 80 80 80 80 80 80 80 80 80],...
        'ColumnWidth',[50 300 80 80 80 80 80 80 80 80 80],...
        'Data',{},...
        'Tag','DosingTable',...
        'CellEditCallback',@(h,e)onDosingTableEdited(app,h,e));
    % Automatically size to fit contents
    app.h.DosingTable.ColumnResizePolicy = 'off';
    app.h.DosingTable.sizeColumnsToData();
else
    app.h.DosingTable = uitable(...
        'Parent',app.h.DosingSelectionLayout,...
        'RowName',{},...
        'ColumnName',{'Active','Name','Type','TargetName','StartTime','TimeUnits','Amount','AmountUnits','Interval','Rate','RepeatCount'},...
        'ColumnFormat',{'logical','char','char','char','numeric','char','numeric','char','numeric','numeric','numeric'},...
        'ColumnEditable',[true false false false true false true false true true true],...
        ...'ColumnMinWidth',[50 50 50 50 50 50 50 50 50 50 50],...
        ...'ColumnPreferredWidth',[50 300 80 80 80 80 80 80 80 80 80],...
        ...'ColumnWidth',[50 300 80 80 80 80 80 80 80 80 80],...
        'Data',{},...
        'Tag','DosingTable',...
        'CellEditCallback',@(h,e)onDosingTableEdited(app,h,e));
end

app.h.DosingSelectionLayout.Widths = [60 -1];


%% Card panel

% Simulation
app.h.SimulationLayout = uix.BoxPanel(...
    'FontSize',10,...
    'Title','Task: Simulation',...
    'BorderType','none',...
    'Parent',app.h.CardLayout);
app.h.SimulationPanel = PKPDViewer.Simulation(...
    'simulation',...
    'Parent',app.h.SimulationLayout,...
    'DataChangedCallback',@(h,e)onRefreshViewer(app,h,e));
% Fitting
app.h.FittingLayout = uix.BoxPanel(...
    'FontSize',10,...
    'Title','Task: Fitting',...
    'BorderType','none',...
    'Parent',app.h.CardLayout);
app.h.FittingPanel = PKPDViewer.Fitting(...
    'Parent',app.h.FittingLayout,...
    'DataChangedCallback',@(h,e)onRefreshViewer(app,h,e));
% Population
app.h.PopulationLayout = uix.BoxPanel(...
    'FontSize',10,...
    'Title','Task: Population',...
    'BorderType','none',...
    'Parent',app.h.CardLayout);
app.h.PopulationPanel = PKPDViewer.Simulation(...
    'population',...
    'Parent',app.h.PopulationLayout,...
    'DataChangedCallback',@(h,e)onRefreshViewer(app,h,e));
% Selection
app.h.CardLayout.Selection = 1;

% Set sizes
app.h.AnalysisLayout.Heights = -1;


% % Get max height (should be about the same)
% CardLayoutHeight = max([...
%     app.h.SimulationPanel.Height,...
%     app.h.FittingPanel.Height,...
%     app.h.PopulationPanel.Height]);
% CardLayoutHeight = CardLayoutHeight + 65; % Radio button group    
% 
% % Adjust sizes - NOTE: size of the card panel will change based on the
% % number of parameters - this is fixed
% app.h.VTopLeftLayout.Heights = [35 35 120 120 100];
% Buffer = 20 + numel(app.h.VTopLeftLayout.Children)*app.h.VTopLeftLayout.Spacing + app.h.VTopLeftLayout.Padding*2;
% app.h.VLeftLayout.Heights = [sum(app.h.VTopLeftLayout.Heights)+Buffer CardLayoutHeight 35];
% 
% % Update heights
% Buffer = 100;
% Pos = get(app.h.LeftSlider,'Position');
% Pos(4) = sum(app.h.VLeftLayout.Heights) + Buffer;
% set(app.h.LeftSlider,'Position',Pos);
% Pos = get(app.h.LeftPanel,'Position');
% Pos(4) = sum(app.h.VLeftLayout.Heights) + Buffer;
% set(app.h.LeftPanel,'Position',Pos);


%% Create the Middle Panel

app.h.PlotGrid = uix.Grid(...
    'Parent',app.h.MiddleLayout,...
    'Padding',5);
for index = 1:app.MaxNumPlots
    % Create container and axes
    if index == 1
        hContainerParent = app.h.PlotGrid;        
    else
        hContainerParent = app.NoParent_;        
    end
    hContainerFigure = ancestor(hContainerParent,'figure');
    app.h.MainAxesContainer(index) = uicontainer(...
        'Parent',hContainerParent); 
    app.h.MainAxes(index) = axes(...
        'Parent',app.h.MainAxesContainer(index));
    % Create plot settings
    app.PlotSettings(index) = PKPD.PlotSettings(app.h.MainAxes(index));
    % Context Menu
    app.h.ContextMenu(index) = uicontextmenu('Parent',hContainerFigure);
    app.h.ContextMenu_YScale(index) = uimenu(app.h.ContextMenu(index),...
        'Label','Y-Scale',...
        'Tag','YScale');
    app.h.ContextMenu_YScaleLinear(index) = uimenu(app.h.ContextMenu_YScale(index),...
        'Label','Linear',...
        'Tag','YScaleLinear',...
        'Checked','on',...
        'Callback',@(h,e)onAxesContextMenu(app,h,e,index));
    app.h.ContextMenu_YScaleLog(index) = uimenu(app.h.ContextMenu_YScale(index),...
        'Label','Log',...
        'Tag','YScaleLog',...
        'Checked','off',...
        'Callback',@(h,e)onAxesContextMenu(app,h,e,index));
    app.h.ContextMenu_ExportSingle(index) = uimenu(app.h.ContextMenu(index),...
        'Label','Save Current Axes...',...
        'Tag','ExportSingleAxes',...
        'Separator','on',...
        'Callback',@(h,e)onAxesContextMenu(app,h,e,index));
    app.h.ContextMenu_ExportAll(index) = uimenu(app.h.ContextMenu(index),...
        'Label','Save All Axes in View Individually...',...
        'Tag','ExportAllAxes',...
        'Callback',@(h,e)onAxesContextMenu(app,h,e,index));
    app.h.ContextMenu_ExportView(index) = uimenu(app.h.ContextMenu(index),...
        'Label','Save All Axes in View...',...
        'Visible','off',...
        'Tag','ExportFullView',...
        'Callback',@(h,e)onAxesContextMenu(app,h,e,index));    
    set(app.h.MainAxes(index),'UIContextMenu',app.h.ContextMenu(index));
end

% Set initial axes titles
for index = app.SimulationPlotIdx
    title(app.h.MainAxes(index),sprintf('Plot %d',index));    
    xlabel(app.h.MainAxes(index),'Time')
    ylabel(app.h.MainAxes(index),'States')
end
for index = app.FittingPlotIdx
    title(app.h.MainAxes(index),'Fit Results');
    xlabel(app.h.MainAxes(index),'Time')
    ylabel(app.h.MainAxes(index),'States')
end
for index = 1:numel(app.PopulationPlotIdx)
    title(app.h.MainAxes(app.PopulationPlotIdx(index)),sprintf('Plot %d',index));
    xlabel(app.h.MainAxes(app.PopulationPlotIdx(index)),'Time')
    ylabel(app.h.MainAxes(app.PopulationPlotIdx(index)),'States')
end

% % Default to first plot
% app.h.PlotGrid.Widths = [-1 0 0 0];
% app.h.PlotGrid.Heights = [-1 0];

% Profile notes
app.h.ProfileNotesPanel = uix.BoxPanel(...
    'Parent',app.h.MiddleLayout,...
    'Title','Profile Notes',...
    'BorderType','none',...
    'Padding',10,...
    'FontSize',10);

% Sizes
app.h.MiddleLayout.Heights = [-4 -1];


% Layout the Profile Notes
app.h.ProfileNotesVLayout = uix.VBox(...
    'Parent',app.h.ProfileNotesPanel,...
    'Spacing',8);

% Overlay checkbox
app.h.PlotOverlayCheckbox = uicontrol(...
    'Parent',app.h.ProfileNotesVLayout,...
    'Style','checkbox',...
    'String','Keep Previous Runs',...
    'Value',0,...
    'Tag','PlotOverlayCheckbox',...    
    'HorizontalAlignment','left',...
    'Tooltip','Keep current and previous runs in session. When unchecking checkbox, previous runs are cleared only after pressing "Run"',...
    'FontWeight','bold',...
    'FontSize',10,...
    'Callback',@(h,e)onSelectPlotOverlay(app,h,e));
app.h.ProfileNotesLayout = uix.HBoxFlex(...
    'Parent',app.h.ProfileNotesVLayout,...
    'Spacing',8);
app.h.ProfileNotesVLayout.Heights = [30 -1];

% First, summary
app.h.ProfileNotesSubPanel = uiextras.Panel(...
    'Parent',app.h.ProfileNotesLayout,...
    'Title','Notes:',...
    'Padding',3,...
    'FontSize',10,...
    'BorderType','none');
if app.IsPC
    app.h.ProfileNotesTable = uiextras.jTable.Table(...
        'Parent',app.h.ProfileNotesSubPanel,...
        'Data',{},...
        'Tag','ProfileNotesTable',...
        'ColumnMinWidth',[50 50 300 75 75],...
        'CellEditCallback',@(h,e)onProfileNotesTableEdited(app,h,e),...
        'CellSelectionCallback',@(h,e)onProfileNotesTableSelected(app,h,e));
    % Automatically size to fit contents
    app.h.ProfileNotesTable.ColumnResizePolicy = 'off';
    app.h.ProfileNotesTable.sizeColumnsToData();
else
    app.h.ProfileNotesTable = uitable(...
        'Parent',app.h.ProfileNotesSubPanel,...        
        'RowName',{},...       
        'Data',{},...
        'Tag','ProfileNotesTable',...
        'CellEditCallback',@(h,e)onProfileNotesTableEdited(app,h,e),...
        'CellSelectionCallback',@(h,e)onProfileNotesTableSelected(app,h,e));
end
% Create context menu
app.h.ProfileNotesTableContextMenu = uicontextmenu('Parent',hFigure);    
app.h.ProfileNotesTableContextMenu_SetColor = uimenu(app.h.ProfileNotesTableContextMenu,...
    'Label','Set Color...',...
    'Tag','SetColor',...
    'Callback',@(h,e)onProfileNotesTableContextMenu(app,h,e));
app.h.ProfileNotesTableContextMenu_DeleteSelectedRun = uimenu(app.h.ProfileNotesTableContextMenu,...
    'Label','Delete Selected Run',...
    'Tag','DeleteSelectedRun',...
    'Callback',@(h,e)onProfileNotesTableContextMenu(app,h,e));    
app.h.ProfileNotesTableContextMenu_DeleteAllRuns = uimenu(app.h.ProfileNotesTableContextMenu,...
    'Label','Delete All Runs',...
    'Tag','DeleteAllRuns',...
    'Callback',@(h,e)onProfileNotesTableContextMenu(app,h,e));    
app.h.ProfileNotesTableContextMenu_ShowOn = uimenu(app.h.ProfileNotesTableContextMenu,...
    'Label','Show: Toggle All Runs On',...
    'Separator','on',...
    'Tag','ToggleShowOn',...
    'Callback',@(h,e)onProfileNotesTableContextMenu(app,h,e));    
app.h.ProfileNotesTableContextMenu_ShowOff = uimenu(app.h.ProfileNotesTableContextMenu,...
    'Label','Show: Toggle All Runs Off',...
    'Tag','ToggleShowOff',...
    'Callback',@(h,e)onProfileNotesTableContextMenu(app,h,e));   
app.h.ProfileNotesTableContextMenu_ExportOn = uimenu(app.h.ProfileNotesTableContextMenu,...
    'Label','Export: Toggle All Runs On',...
    'Tag','ToggleExportOn',...
    'Separator','on',...
    'Callback',@(h,e)onProfileNotesTableContextMenu(app,h,e));    
app.h.ProfileNotesTableContextMenu_ExportOff = uimenu(app.h.ProfileNotesTableContextMenu,...
    'Label','Export: Toggle All Runs Off',...
    'Tag','ToggleExportOff',...
    'Callback',@(h,e)onProfileNotesTableContextMenu(app,h,e));   
app.h.ProfileNotesTableContextMenu_NCAOn = uimenu(app.h.ProfileNotesTableContextMenu,...
    'Label','NCA: Toggle All Runs On',...
    'Tag','ToggleNCAOn',...
    'Visible','off',...
    'Separator','on',...
    'Callback',@(h,e)onProfileNotesTableContextMenu(app,h,e));    
app.h.ProfileNotesTableContextMenu_NCAOff = uimenu(app.h.ProfileNotesTableContextMenu,...
    'Label','NCA: Toggle All Runs Off',...
    'Tag','ToggleNCAOff',...
    'Visible','off',...
    'Callback',@(h,e)onProfileNotesTableContextMenu(app,h,e));   
set(app.h.ProfileNotesTable,'UIContextMenu',app.h.ProfileNotesTableContextMenu);

% Next, detailed view
app.h.ProfileDetailedPanel = uiextras.Panel(...
    'Parent',app.h.ProfileNotesLayout,...
    'Title','',...
    'Padding',3,...
    'FontSize',10,...
    'BorderType','none');
app.h.ProfileDetailedContent = UIUtilities.Summary(...
    'Parent',app.h.ProfileDetailedPanel);
% Widths of profile notes layout
app.h.ProfileNotesLayout.Widths = [-2 -1];


%% Create the Right Panel

% PlotSettings
app.h.PlotSettingsPanel = uix.BoxPanel(...
    'Parent',app.h.RightLayout,...
    'Title','Plot Settings',...
    'BorderType','none',...
    'FontSize',10);
% NCA
app.h.NCAPanel = uix.BoxPanel(...
    'Parent',app.h.RightLayout,...
    'Title','Non-Compartmental Analysis (NCA)',...
    'BorderType','none',...
    'Padding',10,...
    'FontSize',10);
app.h.RightLayout.Heights = [-4 -1];


% Layout the PlotSettings
app.h.PlotSettingsLayout = uix.VBox(...
    'Parent',app.h.PlotSettingsPanel,...
    'Padding',10,...
    'Spacing',8);
% Plot Layout
app.h.PlotLayoutPanel = uix.Panel(...
    'Parent',app.h.PlotSettingsLayout,...
    'BorderType','none',...
    'Title','Plot Layout:',...
    'Padding',10,...
    'FontWeight','bold',...    
    'FontSize',10);
app.h.PlotLayoutPopup = uicontrol(...
    'Parent',app.h.PlotLayoutPanel,...
    'Style','popup',...
    'String',PKPD.Analysis.PlotLayoutOptions,...
    'Value',1,...
    'Tag','PlotLayoutPopup',...
    'HorizontalAlignment','left',...
    'FontSize',8,...
    'Callback',@(h,e)onSelectPlotLayout(app,h,e));
app.h.PlotSettingsFlexLayout = uix.VBoxFlex(...
    'Parent',app.h.PlotSettingsLayout,...
    'Spacing',8);
% Species Data
app.h.SpeciesDataPanel = uix.Panel(...
    'Parent',app.h.PlotSettingsFlexLayout,...
    'BorderType','none',...
    'Title','Species Results:',...
    'Padding',10,...
    'FontWeight','bold',...    
    'FontSize',10);
if app.IsPC
    app.h.SpeciesDataTable = uiextras.jTable.Table(...
        'Parent',app.h.SpeciesDataPanel,...
        'ColumnName',{'Plot','Style','Species','Display'},...
        'ColumnFormat',{'popup','popup','char','char'},...
        'ColumnEditable',[true true false true],...
        'ColumnMinWidth',[50 50 100 300],...
        'Data',{},...
        'Tag','SpeciesDataTable',...
        'CellEditCallback',@(h,e)onSpeciesDataTableEdited(app,h,e));
    app.h.SpeciesDataTable.ColumnResizePolicy = 'off';
    app.h.SpeciesDataTable.sizeColumnsToData();
else
    app.h.SpeciesDataTable = uitable(...
        'Parent',app.h.SpeciesDataPanel,...
        'RowName',{},...
        'ColumnName',{'Plot','Style','Species','Display'},...
        ...'ColumnFormat',{'popup','char','char'},...
        'ColumnEditable',[true true false true],...
        ...'ColumnMinWidth',[50 50 300],...
        'Data',{},...
        'Tag','SpeciesDataTable',...
        'CellSelectionCallback',@(h,e)onSpeciesTableSelection(app,h,e),...
        'CellEditCallback',@(h,e)onSpeciesDataTableEdited(app,h,e));
end
% Experimental Data
app.h.ExperimentalDataPanel = uix.Panel(...
    'Parent',app.h.PlotSettingsFlexLayout,...
    'BorderType','none',...
    'Title','Dataset (All):',...
    'Padding',10,...
    'FontWeight','bold',...
    'FontSize',10);
if app.IsPC
    app.h.ExperimentalDataTable = uiextras.jTable.Table(...
        'Parent',app.h.ExperimentalDataPanel,...
        'ColumnName',{'Plot','Symbol','Data','Display'},...
        'ColumnFormat',{'popup','char','char','char'},...
        'ColumnEditable',[true false false true],...
        'ColumnMinWidth',[50 50 100 300],...
        'Data',{},...
        'Tag','ExperimentalDataTable',...
        'CellEditCallback',@(h,e)onExperimentalDataTableEdited(app,h,e));
    % Automatically size to fit contents
    app.h.ExperimentalDataTable.ColumnResizePolicy = 'off';
    app.h.ExperimentalDataTable.sizeColumnsToData();
else
    app.h.ExperimentalDataTable = uitable(...
        'Parent',app.h.ExperimentalDataPanel,...
        'ColumnName',{'Plot','Symbol','Data','Display'},...
        'RowName',{},...
        'ColumnEditable',[true false false true],...
        ...'ColumnWidth',[50 50 300],...
        'Data',{},...
        'Tag','ExperimentalDataTable',...
        'CellEditCallback',@(h,e)onExperimentalDataTableEdited(app,h,e));
end
% Group Data
app.h.GroupDataPanel = uix.Panel(...
    'Parent',app.h.PlotSettingsFlexLayout,...
    'BorderType','none',...
    'Title','Dataset (Group):',...
    'Padding',10,...
    'FontWeight','bold',...
    'FontSize',10);
if app.IsPC
    app.h.GroupDataTable = uiextras.jTable.Table(...
        'Parent',app.h.GroupDataPanel,...
        'ColumnName',{'Show','Color','Group','Display'},...
        'ColumnFormat',{'boolean','char','integer','char'},...
        'ColumnEditable',[true false false true],...
        'ColumnMinWidth',[50 50 50 50],...
        'Data',{},...
        'Tag','GroupDataTable',...
        'CellEditCallback',@(h,e)onGroupTableEdited(app,h,e));
    % Automatically size to fit contents
    app.h.GroupDataTable.ColumnResizePolicy = 'off';
    app.h.GroupDataTable.sizeColumnsToData();
else
    app.h.GroupDataTable = uitable(...
        'Parent',app.h.GroupDataPanel,...
        'ColumnName',{'Show','Color','Group','Display'},...
        'RowName',{},...
        'ColumnFormat',{'logical','char','numeric','char'},...
        'ColumnEditable',[true false false true],...
        ...'ColumnWidth',[50 50],...
        'Data',{},...
        'Tag','GroupDataTable',...
        'CellSelectionCallback',@(h,e)onGroupTableSelection(app,h,e),...
        'CellEditCallback',@(h,e)onGroupTableEdited(app,h,e));
end
% Create context menu
app.h.GroupDataTableContextMenu = uicontextmenu('Parent',hFigure);    
uimenu(app.h.GroupDataTableContextMenu,...
    'Label','Set Color...',...
    'Tag','GroupColor',...
    'Callback',@(h,e)onGroupTableContextMenu(app,h,e));    
set(app.h.GroupDataTable,'UIContextMenu',app.h.GroupDataTableContextMenu);

% Set heights
app.h.PlotSettingsLayout.Heights = [50 -1];
app.h.PlotSettingsFlexLayout.Heights = [-2 -1 100];
app.h.PlotSettingsFlexLayout.MinimumHeights = [35 35 35];

% Layout the NCA
if app.IsPC
    app.h.NCATable = uiextras.jTable.Table(...
        'Parent',app.h.NCAPanel,...
        'Data',{},...
        'Tag','NCATable');
    % Automatically size to fit contents
    app.h.NCATable.ColumnResizePolicy = 'off';
    app.h.NCATable.sizeColumnsToData();
else
    app.h.NCATable = uitable(...
        'Parent',app.h.NCAPanel,...        
        'RowName',{},...       
        ...'ColumnMinWidth',[100 100 300],...
        'Data',{},...
        'Tag','NCATable');
end
