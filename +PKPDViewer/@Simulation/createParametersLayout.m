function [ParamLayoutHeight,NumParams] = createParametersLayout(vObj)
% createParametersLayout - Creates parameters view
% -------------------------------------------------------------------------
% Abstract: This function creates the parameters view
%
% Syntax:
%           createParametersLayout(vObj)
%
% Inputs:
%           vObj - The PKPDViewer.Simulation vObject
%
% Outputs:
%           none
%
% Examples:
%           none
%
% Notes: none
%

% Copyright 2017 The MathWorks, Inc.
%
% Auth/Revision:
%   MathWorks Consulting
%   $Author: agajjala $
%   $Revision: 420 $  $Date: 2017-12-07 14:47:44 -0500 (Thu, 07 Dec 2017) $
% ---------------------------------------------------------------------

% Delete the existing parameters layout

Ch = get(vObj.h.ParametersPanel,'Children');
delete(Ch)

vObj.h.ParametersLayout = uix.VBox(...
    'Parent',vObj.h.ParametersPanel,...
    'Padding',5,...
    'Spacing',5);

% Button layout
vObj.h.ParametersButtonLayout = uix.HBox(...
    'Parent',vObj.h.ParametersLayout,...
    'Spacing',5);
uix.Empty('Parent',vObj.h.ParametersButtonLayout);
Icon = UIUtilities.iconRead(fullfile(matlabroot, '/toolbox/matlab/icons/redo.mat'));
vObj.h.RestoreDefaultsButton = uicontrol(...
    'Style','pushbutton',...
    'CData',Icon,...
    'TooltipString','Reset to defaults...',...
    'Parent',vObj.h.ParametersButtonLayout,...
    'Callback',@(h,e)onRestoreDefaults(vObj,h,e));
Icon = UIUtilities.iconRead(fullfile(matlabroot, '/toolbox/matlab/icons/file_save.png'));
vObj.h.SaveAsVariantButton = uicontrol(...
    'Style','pushbutton',...
    'CData',Icon,...
    'TooltipString','Save as variant...',...
    'Parent',vObj.h.ParametersButtonLayout,...
    'Callback',@(h,e)onSaveAsVariant(vObj,h,e));
vObj.h.ParametersButtonLayout.Widths = [-1 30 30];

% Get parameter info
ParamInfo = getParamInfo(vObj.Data);
NumParams = numel(ParamInfo);

% For each parameter, add a row
% Delete existing handles
vObj.h.ParamHBox = zeros(1,NumParams);
vObj.h.ParamNameText = zeros(1,NumParams);
vObj.h.ParamValueEdit = zeros(1,NumParams);
vObj.h.ParamUnitsText = zeros(1,NumParams);
vObj.h.ParamMinEdit = zeros(1,NumParams);
vObj.h.ParamSlider = zeros(1,NumParams);
vObj.h.ParamMaxEdit = zeros(1,NumParams);
vObj.h.ParamScalePopup = zeros(1,NumParams);
vObj.h.ParamPercCVEdit = zeros(1,NumParams);
vObj.h.ParamPercCVText = zeros(1,NumParams);
for pIndex = 1:NumParams
    [vObj.h.ParamHBox(pIndex),vObj.h.ParamNameText(pIndex),vObj.h.ParamValueEdit(pIndex),vObj.h.ParamUnitsText(pIndex),...
        vObj.h.ParamMinEdit(pIndex),vObj.h.ParamSlider(pIndex),vObj.h.ParamMaxEdit(pIndex),vObj.h.ParamScalePopup(pIndex),vObj.h.ParamPercCVEdit(pIndex),vObj.h.ParamPercCVText(pIndex)] = ...
        i_AddSliderRow(vObj,vObj.h.ParametersLayout,ParamInfo(pIndex));
end

% Set sizes
vObj.h.ParametersLayout.Heights = [30 vObj.ParamRowHeight*ones(1,NumParams)];    

ButtonSize = 60;
Padding = vObj.h.ParametersLayout.Padding * 2;
ParamLayoutHeight = sum(vObj.h.ParametersLayout.Heights);
Spacing = (NumParams+1) * vObj.h.ParametersLayout.Spacing;

% Update sizes
vObj.h.MainLayout.Heights(end) = ButtonSize + Padding + ParamLayoutHeight + Spacing; % Add some buffer

                

% -------------------------------------------------------------------------
function [hBox,hNameText,hValueEdit,hUnitsText,hMinEdit,hSliderEdit,hMaxEdit,hScalePopup,hCVEdit,hCVText] = ...
    i_AddSliderRow(vObj,hParent,ThisParamInfo)

hBox = uix.HBox(...
    'Parent',hParent,...
    'Spacing',5);

% Name
hNameUnitsBox = uix.VBox(...
    'Parent',hBox);
hNameText = uicontrol(...
    'Parent',hNameUnitsBox,...
    'Style','text',...
    'String',ThisParamInfo.Name,...
    'TooltipString',sprintf('%s (%s)',ThisParamInfo.Name,ThisParamInfo.Units),...
    'Tag',ThisParamInfo.Name,...
    'FontWeight','bold',...
    'HorizontalAlignment','center',...
    'FontSize',8);
% Units
hUnitsText = uicontrol(...
    'Parent',hNameUnitsBox,...
    'Style','text',...
    'String',ThisParamInfo.Units,...
    'Tag',ThisParamInfo.Name,...
    'TooltipString',sprintf('%s (%s)',ThisParamInfo.Name,ThisParamInfo.Units),...
    'FontAngle','italic',...
    'HorizontalAlignment','center',...
    'FontSize',7);
% Value
hValueEdit = uicontrol(...
    'Parent',hBox,...
    'Style','edit',...
    'String',num2str(ThisParamInfo.Value),...
    'Tag',ThisParamInfo.Name,...
    'TooltipString',sprintf('%s: Value',ThisParamInfo.Name),...
    'HorizontalAlignment','center',...
    'FontWeight','bold',...
    'FontSize',8,...
    'Callback',@(h,e)onEditParam(vObj,h,e,'Value'));

% Space
uix.Empty('Parent',hBox);
% Min
hMinEdit = uicontrol(...
    'Parent',hBox,...
    'Style','edit',...
    'String',num2str(ThisParamInfo.Min),...
    'Tag',ThisParamInfo.Name,...
    'HorizontalAlignment','center',...
    'TooltipString',sprintf('%s: Min',ThisParamInfo.Name),...
    'FontSize',8,...
    'Callback',@(h,e)onEditParam(vObj,h,e,'Min'));
% Slider
hSliderEdit = uicontrol(...
    'Parent',hBox,...
    'Style','slider',...
    'Tag',ThisParamInfo.Name,...
    'Min',ThisParamInfo.Min,...
    'Max',ThisParamInfo.Max,...
    'Value',ThisParamInfo.Value,...
    'TooltipString',sprintf('%s: Slider',ThisParamInfo.Name),...
    'Position',[0 0.025 1 0.95],...
    'Callback',@(h,e)onEditParamSlider(vObj,h,e));
% Max
hMaxEdit = uicontrol(...
    'Parent',hBox,...
    'Style','edit',...
    'String',num2str(ThisParamInfo.Max),...
    'Tag',ThisParamInfo.Name,...
    'TooltipString',sprintf('%s: Max',ThisParamInfo.Name),...
    'HorizontalAlignment','center',...
    'FontSize',8,...
    'Callback',@(h,e)onEditParam(vObj,h,e,'Max'));          
% Scale
if strcmpi(ThisParamInfo.Scale,'linear')
    PopupValue = 1;
else
    PopupValue = 2;
end
hScalePopup = uicontrol(...
    'Parent',hBox,...
    'Style','popup',...
    'String',{'linear','log'},...
    'Value',PopupValue,...
    'Tag',ThisParamInfo.Name,...
    'TooltipString',sprintf('%s: Scale',ThisParamInfo.Name),...
    'HorizontalAlignment','left',...
    'FontSize',8,...
    'Callback',@(h,e)onEditParamScale(vObj,h,e)); 
% %CV
hCVEdit = uicontrol(...
    'Parent',hBox,...
    'Style','edit',...
    'String',ThisParamInfo.PercCV,...
    'Tag',ThisParamInfo.Name,...
    'TooltipString',sprintf('%s: Coefficient of variation',ThisParamInfo.Name),...
    'HorizontalAlignment','center',...
    'FontSize',8,...
    'Callback',@(h,e)onEditParamCV(vObj,h,e));
% %CV text
hCVText = uicontrol(...
    'Parent',hBox,...
    'Style','text',...
    'String',sprintf('%%\nCV'),...
    'Tag',ThisParamInfo.Name,...
    'TooltipString',sprintf('%s: Coefficient of variation',ThisParamInfo.Name),...
    'HorizontalAlignment','left',...
    'FontSize',8);
% Adjust widths based on the type
if strcmpi(vObj.Type,'simulation')
    % Simulation
    hBox.Widths = vObj.MaxSimulationParamRowWidths;
else
    % Population
    hBox.Widths = vObj.MaxPopulationParamRowWidths; 
end
